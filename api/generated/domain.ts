/**
 * Generated by orval v6.29.1 üç∫
 * Do not edit manually.
 * Storead
 * ÏÑúÏ†ÅÏùÑ ÏùΩÍ≥† Ï†ïÎ¶¨ ÌïòÎäî Í≥µÍ∞Ñ
 * OpenAPI spec version: 1.0.0
 */
import { customInstance } from "../custom-instance";
import type {
  Article,
  ArticleElasticSearch,
  ArticlesCreateParams,
  ArticlesListParams,
  AuthConnectionsGithubRetrieveParams,
  AuthConnectionsGoogleRetrieveParams,
  AuthConnectionsKakaoRetrieveParams,
  BookDetailResponse,
  BooksListParams,
  Comment,
  Follow,
  FollowList,
  Output,
  PaginatedArticleElasticSearchList,
  PaginatedArticleList,
  PaginatedResponseList,
  PatchedArticle,
  PatchedComment,
  PatchedUpdateProfile,
  Profile,
  ProfileRenderResponse,
  Rating,
  Request,
  RequestArticleList,
  Response,
  SearchArticlesListParams,
  SearchArticlesSuggestRetrieveParams,
  TokenVerify,
  UpdateProfile,
  Uuid,
} from "./models";

// https://stackoverflow.com/questions/49579094/typescript-conditional-types-filter-out-readonly-properties-pick-only-requir/49579497#49579497
type IfEquals<X, Y, A = X, B = never> =
  (<T>() => T extends X ? 1 : 2) extends <T>() => T extends Y ? 1 : 2 ? A : B;

type WritableKeys<T> = {
  [P in keyof T]-?: IfEquals<
    { [Q in P]: T[P] },
    { -readonly [Q in P]: T[P] },
    P
  >;
}[keyof T];

type UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends (
  k: infer I,
) => void
  ? I
  : never;
type DistributeReadOnlyOverUnions<T> = T extends any ? NonReadonly<T> : never;

type Writable<T> = Pick<T, WritableKeys<T>>;
type NonReadonly<T> = [T] extends [UnionToIntersection<T>]
  ? {
      [P in keyof Writable<T>]: T[P] extends object
        ? NonReadonly<NonNullable<T[P]>>
        : T[P];
    }
  : DistributeReadOnlyOverUnions<T>;

/**
 * @summary Í≤åÏãúÍ∏Ä Î™©Î°ù Ï°∞Ìöå API
 */
export const articlesList = (params?: ArticlesListParams) => {
  return customInstance<PaginatedArticleList>({
    url: `/api/v1/articles`,
    method: "GET",
    params,
    includeAuth: false,
  });
};

/**
 * @summary Í≤åÏãúÍ∏Ä ÏÉùÏÑ± API
 */
export const articlesCreate = (
  requestArticleList: RequestArticleList,
  params?: ArticlesCreateParams,
) => {
  return customInstance<PaginatedArticleList>({
    url: `/api/v1/articles`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: requestArticleList,
    params,
  });
};

/**
 * @summary ÏÉÅÏÑ∏ Í≤åÏãúÍ∏Ä Ï°∞Ìöå API
 */
export const articleDetail = (articleId: string) => {
  return customInstance<Article[]>({
    url: `/api/v1/articles/${articleId}`,
    method: "GET",
    includeAuth: false,
  });
};

export const articlesUpdate = (
  articleId: string,
  article: NonReadonly<Article>,
) => {
  return customInstance<Article>({
    url: `/api/v1/articles/${articleId}`,
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    data: article,
  });
};

/**
 * @summary Í≤åÏãúÍ∏Ä ÏàòÏ†ï API
 */
export const articlesPartialUpdate = (
  articleId: string,
  patchedArticle: NonReadonly<PatchedArticle>,
) => {
  return customInstance<Article[]>({
    url: `/api/v1/articles/${articleId}`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: patchedArticle,
  });
};

/**
 * @summary Í≤åÏãúÍ∏Ä ÏÇ≠Ï†ú API
 */
export const articlesDestroy = (articleId: string) => {
  return customInstance<void>({
    url: `/api/v1/articles/${articleId}`,
    method: "DELETE",
  });
};

/**
 * @summary Í≤åÏãúÍ∏Ä Ï∂îÏ≤ú API
 */
export const articlesRecommendCreate = (articleId: string, uuid: Uuid) => {
  return customInstance<Output>({
    url: `/api/v1/articles/${articleId}/recommend`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: uuid,
  });
};

/**
 * @summary Í≤åÏãúÍ∏Ä Ï∂îÏ≤ú Ï∑®ÏÜå API
 */
export const articlesRecommendDestroy = (articleId: string) => {
  return customInstance<void>({
    url: `/api/v1/articles/${articleId}/recommend`,
    method: "DELETE",
  });
};

/**
 * @summary ÍπÉÌóàÎ∏å Î°úÍ∑∏Ïù∏ API
 */
export const authConnectionsGithubRetrieve = (
  params: AuthConnectionsGithubRetrieveParams,
) => {
  return customInstance<Output>({
    url: `/api/v1/auth/connections/github`,
    method: "GET",
    params,
    includeAuth: false,
  });
};

/**
 * @summary Íµ¨Í∏Ä Î°úÍ∑∏Ïù∏ API
 */
export const authConnectionsGoogleRetrieve = (
  params: AuthConnectionsGoogleRetrieveParams,
) => {
  return customInstance<Output>({
    url: `/api/v1/auth/connections/google`,
    method: "GET",
    params,
    includeAuth: false,
  });
};

/**
 * @summary Ïπ¥Ïπ¥Ïò§ Î°úÍ∑∏Ïù∏ API
 */
export const authConnectionsKakaoRetrieve = (
  params: AuthConnectionsKakaoRetrieveParams,
) => {
  return customInstance<Output>({
    url: `/api/v1/auth/connections/kakao`,
    method: "GET",
    params,
    includeAuth: false,
  });
};

/**
 * @summary ÏÜåÏÖú Î°úÍ∑∏ÏïÑÏõÉ API
 */
export const authLogoutCreate = () => {
  return customInstance<Output>({ url: `/api/v1/auth/logout`, method: "POST" });
};

/**
 * @summary ÌÜ†ÌÅ∞ Ïû¨Î∞úÍ∏â API
 */
export const authTokensRefreshRetrieve = () => {
  return customInstance<Output>({
    url: `/api/v1/auth/tokens/refresh`,
    method: "GET",
  });
};

/**
 * Takes a token and indicates if it is valid.  This view provides no
information about a token's fitness for a particular use.
 * @summary ÌÜ†ÌÅ∞ Í≤ÄÏ¶ù API
 */
export const authTokensVerifyCreate = () => {
  return customInstance<TokenVerify>({
    url: `/api/v1/auth/tokens/verify`,
    method: "POST",
  });
};

/**
 * @summary Ï±Ö Î™©Î°ù Ï°∞Ìöå API
 */
export const booksList = (params?: BooksListParams) => {
  return customInstance<PaginatedResponseList>({
    url: `/api/v1/books`,
    method: "GET",
    params,
    includeAuth: false,
  });
};

/**
 * @summary Ï±Ö Îì±Î°ù API
 */
export const booksCreate = (request: Request) => {
  return customInstance<Response>({
    url: `/api/v1/books`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: request,
  });
};

/**
 * @summary Ï±Ö ÏÉÅÏÑ∏ Ï†ïÎ≥¥ Ï°∞Ìöå API
 */
export const booksRetrieve = (bookId: string) => {
  return customInstance<BookDetailResponse>({
    url: `/api/v1/books/${bookId}`,
    method: "GET",
    includeAuth: false,
  });
};

/**
 * @summary ÎåìÍ∏Ä ÏÉÅÏÑ∏ Ï°∞Ìöå API
 */
export const commentsRetrieve = (id: string) => {
  return customInstance<Comment>({
    url: `/api/v1/comments/${id}`,
    method: "GET",
    includeAuth: false,
  });
};

export const commentsUpdate = (id: string, comment: NonReadonly<Comment>) => {
  return customInstance<Comment>({
    url: `/api/v1/comments/${id}`,
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    data: comment,
  });
};

/**
 * @summary ÎåìÍ∏Ä ÎÇ¥Ïö© ÏàòÏ†ï API
 */
export const commentsPartialUpdate = (
  id: string,
  patchedComment: NonReadonly<PatchedComment>,
) => {
  return customInstance<Comment>({
    url: `/api/v1/comments/${id}`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: patchedComment,
  });
};

/**
 * @summary ÎåìÍ∏Ä ÎÇ¥Ïö© ÏÇ≠Ï†ú API
 */
export const commentsDestroy = (id: string) => {
  return customInstance<void>({
    url: `/api/v1/comments/${id}`,
    method: "DELETE",
  });
};

/**
 * @summary ÎåìÍ∏Ä Î™©Î°ù Ï°∞Ìöå API
 */
export const commentsArticleList = (articleId: string) => {
  return customInstance<Comment[]>({
    url: `/api/v1/comments/article/${articleId}`,
    method: "GET",
    includeAuth: false,
  });
};

/**
 * @summary ÎåìÍ∏Ä ÏÉùÏÑ± API
 */
export const commentsArticleCreate = (
  articleId: string,
  comment: NonReadonly<Comment>,
) => {
  return customInstance<Comment>({
    url: `/api/v1/comments/article/${articleId}`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: comment,
  });
};

/**
 * @summary Îã§Î•∏ Ïú†Ï†Ä ÌîÑÎ°úÌïÑ ÏÉÅÏÑ∏ Ï†ïÎ≥¥ Ï°∞Ìöå API
 */
export const profilesRetrieve = (profileId: string) => {
  return customInstance<Profile>({
    url: `/api/v1/profiles/${profileId}`,
    method: "GET",
    includeAuth: false,
  });
};

/**
 * @summary ÌåîÎ°úÏö∞ Îì±Î°ù API
 */
export const profilesFollowCreate = (userId: string, uuid: Uuid) => {
  return customInstance<Follow>({
    url: `/api/v1/profiles/${userId}/follow`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: uuid,
  });
};

/**
 * @summary ÌåîÎ°úÏö∞ Ï∑®ÏÜå API
 */
export const profilesUnfollowCreate = (userId: string, uuid: Uuid) => {
  return customInstance<Follow>({
    url: `/api/v1/profiles/${userId}/unfollow`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: uuid,
  });
};

/**
 * @summary ÎÇòÏùò ÌîÑÎ°úÌïÑ ÏÉÅÏÑ∏ Ï†ïÎ≥¥ Ï°∞Ìöå API
 */
export const profilesMeRetrieve = () => {
  return customInstance<Profile>({ url: `/api/v1/profiles/me`, method: "GET" });
};

/**
 * @summary ÌåîÎ°úÏõå Î™©Î°ù Ï°∞Ìöå API
 */
export const profilesMeFollowersRetrieve = () => {
  return customInstance<FollowList>({
    url: `/api/v1/profiles/me/followers`,
    method: "GET",
  });
};

/**
 * @summary ÌåîÎ°úÏûâ Î™©Î°ù Ï°∞Ìöå API
 */
export const profilesMeFollowingRetrieve = () => {
  return customInstance<FollowList>({
    url: `/api/v1/profiles/me/following`,
    method: "GET",
  });
};

export const profilesMeUpdateUpdate = (updateProfile: UpdateProfile) => {
  return customInstance<UpdateProfile>({
    url: `/api/v1/profiles/me/update`,
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    data: updateProfile,
  });
};

/**
 * @summary ÌîÑÎ°úÌïÑ ÏàòÏ†ï API
 */
export const profilesMeUpdatePartialUpdate = (
  patchedUpdateProfile: PatchedUpdateProfile,
) => {
  return customInstance<ProfileRenderResponse>({
    url: `/api/v1/profiles/me/update`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: patchedUpdateProfile,
  });
};

/**
 * @summary ÌèâÏ†ê Îì±Î°ù API
 */
export const ratingsRateArticleCreate = (articleId: string, rating: Rating) => {
  return customInstance<Rating>({
    url: `/api/v1/ratings/rate_article/${articleId}`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: rating,
  });
};

/**
 * @summary ÌèâÏ†ê ÏàòÏ†ï API
 */
export const ratingsRateArticleUpdate = (articleId: string, rating: Rating) => {
  return customInstance<Rating>({
    url: `/api/v1/ratings/rate_article/${articleId}`,
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    data: rating,
  });
};

/**
 * DocumentViewSet with suggest and functional-suggest mix-ins.
 * @summary Í≤åÏãúÍ∏Ä Í≤ÄÏÉâ API
 */
export const searchArticlesList = (params: SearchArticlesListParams) => {
  return customInstance<PaginatedArticleElasticSearchList>({
    url: `/api/v1/search/articles`,
    method: "GET",
    params,
    includeAuth: false,
  });
};

/**
 * DocumentViewSet with suggest and functional-suggest mix-ins.
 */
export const searchArticlesRetrieve = (id: string) => {
  return customInstance<ArticleElasticSearch>({
    url: `/api/v1/search/articles/${id}`,
    method: "GET",
    includeAuth: false,
  });
};

/**
 * Functional suggest functionality.

:param request:
:return:
 */
export const searchArticlesFunctionalSuggestRetrieve = () => {
  return customInstance<ArticleElasticSearch>({
    url: `/api/v1/search/articles/functional_suggest`,
    method: "GET",
    includeAuth: false,
  });
};

/**
 * Suggest functionality.
 * @summary Ï†úÎ™© ÏûêÎèôÏôÑÏÑ± API
 */
export const searchArticlesSuggestRetrieve = (
  params?: SearchArticlesSuggestRetrieveParams,
) => {
  return customInstance<ArticleElasticSearch>({
    url: `/api/v1/search/articles/suggest`,
    method: "GET",
    params,
    includeAuth: false,
  });
};

export type ArticlesListResult = NonNullable<
  Awaited<ReturnType<typeof articlesList>>
>;
export type ArticlesCreateResult = NonNullable<
  Awaited<ReturnType<typeof articlesCreate>>
>;
export type ArticlesList2Result = NonNullable<
  Awaited<ReturnType<typeof articleDetail>>
>;
export type ArticlesUpdateResult = NonNullable<
  Awaited<ReturnType<typeof articlesUpdate>>
>;
export type ArticlesPartialUpdateResult = NonNullable<
  Awaited<ReturnType<typeof articlesPartialUpdate>>
>;
export type ArticlesDestroyResult = NonNullable<
  Awaited<ReturnType<typeof articlesDestroy>>
>;
export type ArticlesRecommendCreateResult = NonNullable<
  Awaited<ReturnType<typeof articlesRecommendCreate>>
>;
export type ArticlesRecommendDestroyResult = NonNullable<
  Awaited<ReturnType<typeof articlesRecommendDestroy>>
>;
export type AuthConnectionsGithubRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof authConnectionsGithubRetrieve>>
>;
export type AuthConnectionsGoogleRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof authConnectionsGoogleRetrieve>>
>;
export type AuthConnectionsKakaoRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof authConnectionsKakaoRetrieve>>
>;
export type AuthLogoutCreateResult = NonNullable<
  Awaited<ReturnType<typeof authLogoutCreate>>
>;
export type AuthTokensRefreshRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof authTokensRefreshRetrieve>>
>;
export type AuthTokensVerifyCreateResult = NonNullable<
  Awaited<ReturnType<typeof authTokensVerifyCreate>>
>;
export type BooksListResult = NonNullable<
  Awaited<ReturnType<typeof booksList>>
>;
export type BooksCreateResult = NonNullable<
  Awaited<ReturnType<typeof booksCreate>>
>;
export type BooksRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof booksRetrieve>>
>;
export type CommentsRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof commentsRetrieve>>
>;
export type CommentsUpdateResult = NonNullable<
  Awaited<ReturnType<typeof commentsUpdate>>
>;
export type CommentsPartialUpdateResult = NonNullable<
  Awaited<ReturnType<typeof commentsPartialUpdate>>
>;
export type CommentsDestroyResult = NonNullable<
  Awaited<ReturnType<typeof commentsDestroy>>
>;
export type CommentsArticleListResult = NonNullable<
  Awaited<ReturnType<typeof commentsArticleList>>
>;
export type CommentsArticleCreateResult = NonNullable<
  Awaited<ReturnType<typeof commentsArticleCreate>>
>;
export type ProfilesRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof profilesRetrieve>>
>;
export type ProfilesFollowCreateResult = NonNullable<
  Awaited<ReturnType<typeof profilesFollowCreate>>
>;
export type ProfilesUnfollowCreateResult = NonNullable<
  Awaited<ReturnType<typeof profilesUnfollowCreate>>
>;
export type ProfilesMeRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof profilesMeRetrieve>>
>;
export type ProfilesMeFollowersRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof profilesMeFollowersRetrieve>>
>;
export type ProfilesMeFollowingRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof profilesMeFollowingRetrieve>>
>;
export type ProfilesMeUpdateUpdateResult = NonNullable<
  Awaited<ReturnType<typeof profilesMeUpdateUpdate>>
>;
export type ProfilesMeUpdatePartialUpdateResult = NonNullable<
  Awaited<ReturnType<typeof profilesMeUpdatePartialUpdate>>
>;
export type RatingsRateArticleCreateResult = NonNullable<
  Awaited<ReturnType<typeof ratingsRateArticleCreate>>
>;
export type RatingsRateArticleUpdateResult = NonNullable<
  Awaited<ReturnType<typeof ratingsRateArticleUpdate>>
>;
export type SearchArticlesListResult = NonNullable<
  Awaited<ReturnType<typeof searchArticlesList>>
>;
export type SearchArticlesRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof searchArticlesRetrieve>>
>;
export type SearchArticlesFunctionalSuggestRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof searchArticlesFunctionalSuggestRetrieve>>
>;
export type SearchArticlesSuggestRetrieveResult = NonNullable<
  Awaited<ReturnType<typeof searchArticlesSuggestRetrieve>>
>;
